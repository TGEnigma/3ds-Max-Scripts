endian big

get WTB long
get UNKNOWN long
get FILETOTAL long
get OFFSET1 long
get OFFSET2 long
get OFFSET3 long
get OFFSET4 long
get OFFSET5 long
get OFFSET6 long
goto OFFSET1

for i = 0 < FILETOTAL

get FILESTART[i] long

next i

for i = 0 < FILETOTAL

goto OFFSET5
goto 0x20 0 SEEK_CUR
get FILESIZE[i] long

log MEMORY_FILE 0 0

set MEMORY_FILE binary "\x47\x66\x78\x32\x00\x00\x00\x20\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0B\x00\x00\x00\x9C\x00\x00\x00\x00\x00\x00\x00\x00"

append
log MEMORY_FILE OFFSET5 0x9C
append

set MEMORY_FILE2 binary "\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

append
log MEMORY_FILE 0 0x20 MEMORY_FILE2
append

putVarChr MEMORY_FILE 0x50 0x00000001 long
putVarChr MEMORY_FILE 0xF0 FILESIZE[i] long

append
log MEMORY_FILE FILESTART[i] FILESIZE[i]
append

set MEMORY_FILE3 binary "\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

append
log MEMORY_FILE 0 0x20 MEMORY_FILE3
append

get SIZE asize MEMORY_FILE
get NAME basename

if FILETOTAL > 1
string NAME + _
string NAME + i
endif

string NAME + .gtx
log NAME 0 SIZE MEMORY_FILE

math OFFSET5 += 0xC0

next i

endfunction